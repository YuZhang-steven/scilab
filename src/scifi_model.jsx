/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";


const rotateClick = (event) =>{
  console.log(event)
}



export default function Scifi_model(props) {

  const icons = useRef()
  const rotateWheel= useRef()
  const webShow = useRef()

  


  

  const iconClick=()=>{
    console.log("icon click")
    icons.current.material.color.set(`hsl(${Math.random() * 360}, 100%, 75%)`)
  }

  const { nodes, materials } = useGLTF("src/assets/Sci-fi_lab_export.gltf");
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="upper_floor"
          castShadow
          receiveShadow
          geometry={nodes.upper_floor.geometry}
          material={materials.Grey}
        />
        <mesh
          name="machine01"
          castShadow
          receiveShadow
          geometry={nodes.machine01.geometry}
          material={nodes.machine01.material}
        />
        <mesh
          name="machine02"
          castShadow
          receiveShadow
          geometry={nodes.machine02.geometry}
          material={materials["Dark grey"]}
        />
        <mesh
          name="machine03"
          castShadow
          receiveShadow
          geometry={nodes.machine03.geometry}
          material={materials.White}
        />
        <mesh
          name="AvatarScreen"
          castShadow
          receiveShadow
          geometry={nodes.AvatarScreen.geometry}
          material={materials.Grey}
        />
        <mesh
          name="Back_Structure"
          castShadow
          receiveShadow
          geometry={nodes.Back_Structure.geometry}
          material={materials.Grey}
        />
        <mesh
          name="machine04"
          castShadow
          receiveShadow
          geometry={nodes.machine04.geometry}
          material={materials.Orange}
        />
        <mesh
          name="Plane001"
          castShadow
          receiveShadow
          geometry={nodes.Plane001.geometry}
          material={materials.Orange}
        />
        <mesh
          name="Cylinder001"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials.Cyab}
        />
        <mesh
          name="Cube005"
          castShadow
          receiveShadow
          geometry={nodes.Cube005.geometry}
          material={materials.Red}
        />
        <mesh
          name="Pipe"
          castShadow
          receiveShadow
          geometry={nodes.Pipe.geometry}
          material={materials.Grey}
        />
        <mesh
          name="Floor"
          castShadow
          receiveShadow
          geometry={nodes.Floor.geometry}
          material={materials.Grey}
        />
        <mesh
          name="icon_cube"
          castShadow
          receiveShadow
          geometry={nodes.icon_cube.geometry}
          material={nodes.icon_cube.material}

          ref={icons}
          onClick={iconClick}
        />
        <mesh
          name="Base"
          castShadow
          receiveShadow
          geometry={nodes.Base.geometry}
          material={materials.Grey}
          rotation={[-Math.PI, 0, -Math.PI]}
          scale={-1}
        />
        <mesh
          name="Rotate"
          castShadow
          receiveShadow
          geometry={nodes.Rotate.geometry}
          material={materials.White}
          rotation={[-Math.PI, 0, -Math.PI]}
          scale={-1}

          ref={rotateWheel}
          onClick={rotateClick}

          
        />
        <mesh
          name="NameScreen"
          castShadow
          receiveShadow
          geometry={nodes.NameScreen.geometry}
          material={nodes.NameScreen.material}
          position={[0, -0.487, 0]}
          scale={[0.9, 1.62, 0.9]}
        />
        <mesh
          name="Web_Screen"
          castShadow
          receiveShadow
          geometry={nodes.Web_Screen.geometry}
          material={nodes.Web_Screen.material}
          position={[-0.183, 1.038, 0.283]}
          rotation={[0, 0.838, -1.204]}
          scale={[0.85, 1, 1.15]}

          ref={webShow}
        />
        <mesh
          name="Stairs"
          castShadow
          receiveShadow
          geometry={nodes.Stairs.geometry}
          material={materials.White}
          position={[0, 0.318, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("src/assets/Sci-fi_lab_export.gltf");
